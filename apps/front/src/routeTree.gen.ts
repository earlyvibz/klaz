/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/_dashboard'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as DashboardUsersRouteImport } from './routes/_dashboard.users'
import { Route as DashboardSchoolsRouteImport } from './routes/_dashboard.schools'
import { Route as DashboardQuestsRouteImport } from './routes/_dashboard.quests'
import { Route as DashboardNotificationsRouteImport } from './routes/_dashboard.notifications'
import { Route as DashboardMyPurchasesRouteImport } from './routes/_dashboard.my-purchases'
import { Route as DashboardMarketplaceRouteImport } from './routes/_dashboard.marketplace'
import { Route as DashboardLeaderboardRouteImport } from './routes/_dashboard.leaderboard'
import { Route as DashboardHomeRouteImport } from './routes/_dashboard.home'
import { Route as DashboardAccountRouteImport } from './routes/_dashboard.account'
import { Route as DashboardAdminQuestsRouteImport } from './routes/_dashboard.admin.quests'
import { Route as DashboardAdminPurchasesRouteImport } from './routes/_dashboard.admin.purchases'
import { Route as DashboardAdminMarketplaceRouteImport } from './routes/_dashboard.admin.marketplace'
import { Route as DashboardAdminHomeRouteImport } from './routes/_dashboard.admin.home'
import { Route as DashboardAdminClaimsRouteImport } from './routes/_dashboard.admin.claims'
import { Route as DashboardAdminAnalyticsRouteImport } from './routes/_dashboard.admin.analytics'

const DashboardRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const DashboardUsersRoute = DashboardUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardSchoolsRoute = DashboardSchoolsRouteImport.update({
  id: '/schools',
  path: '/schools',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardQuestsRoute = DashboardQuestsRouteImport.update({
  id: '/quests',
  path: '/quests',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardNotificationsRoute = DashboardNotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardMyPurchasesRoute = DashboardMyPurchasesRouteImport.update({
  id: '/my-purchases',
  path: '/my-purchases',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardMarketplaceRoute = DashboardMarketplaceRouteImport.update({
  id: '/marketplace',
  path: '/marketplace',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardLeaderboardRoute = DashboardLeaderboardRouteImport.update({
  id: '/leaderboard',
  path: '/leaderboard',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardHomeRoute = DashboardHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAccountRoute = DashboardAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAdminQuestsRoute = DashboardAdminQuestsRouteImport.update({
  id: '/admin/quests',
  path: '/admin/quests',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAdminPurchasesRoute = DashboardAdminPurchasesRouteImport.update({
  id: '/admin/purchases',
  path: '/admin/purchases',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAdminMarketplaceRoute =
  DashboardAdminMarketplaceRouteImport.update({
    id: '/admin/marketplace',
    path: '/admin/marketplace',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardAdminHomeRoute = DashboardAdminHomeRouteImport.update({
  id: '/admin/home',
  path: '/admin/home',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAdminClaimsRoute = DashboardAdminClaimsRouteImport.update({
  id: '/admin/claims',
  path: '/admin/claims',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAdminAnalyticsRoute = DashboardAdminAnalyticsRouteImport.update({
  id: '/admin/analytics',
  path: '/admin/analytics',
  getParentRoute: () => DashboardRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/account': typeof DashboardAccountRoute
  '/home': typeof DashboardHomeRoute
  '/leaderboard': typeof DashboardLeaderboardRoute
  '/marketplace': typeof DashboardMarketplaceRoute
  '/my-purchases': typeof DashboardMyPurchasesRoute
  '/notifications': typeof DashboardNotificationsRoute
  '/quests': typeof DashboardQuestsRoute
  '/schools': typeof DashboardSchoolsRoute
  '/users': typeof DashboardUsersRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/admin/analytics': typeof DashboardAdminAnalyticsRoute
  '/admin/claims': typeof DashboardAdminClaimsRoute
  '/admin/home': typeof DashboardAdminHomeRoute
  '/admin/marketplace': typeof DashboardAdminMarketplaceRoute
  '/admin/purchases': typeof DashboardAdminPurchasesRoute
  '/admin/quests': typeof DashboardAdminQuestsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/account': typeof DashboardAccountRoute
  '/home': typeof DashboardHomeRoute
  '/leaderboard': typeof DashboardLeaderboardRoute
  '/marketplace': typeof DashboardMarketplaceRoute
  '/my-purchases': typeof DashboardMyPurchasesRoute
  '/notifications': typeof DashboardNotificationsRoute
  '/quests': typeof DashboardQuestsRoute
  '/schools': typeof DashboardSchoolsRoute
  '/users': typeof DashboardUsersRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/admin/analytics': typeof DashboardAdminAnalyticsRoute
  '/admin/claims': typeof DashboardAdminClaimsRoute
  '/admin/home': typeof DashboardAdminHomeRoute
  '/admin/marketplace': typeof DashboardAdminMarketplaceRoute
  '/admin/purchases': typeof DashboardAdminPurchasesRoute
  '/admin/quests': typeof DashboardAdminQuestsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_dashboard/account': typeof DashboardAccountRoute
  '/_dashboard/home': typeof DashboardHomeRoute
  '/_dashboard/leaderboard': typeof DashboardLeaderboardRoute
  '/_dashboard/marketplace': typeof DashboardMarketplaceRoute
  '/_dashboard/my-purchases': typeof DashboardMyPurchasesRoute
  '/_dashboard/notifications': typeof DashboardNotificationsRoute
  '/_dashboard/quests': typeof DashboardQuestsRoute
  '/_dashboard/schools': typeof DashboardSchoolsRoute
  '/_dashboard/users': typeof DashboardUsersRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/_dashboard/admin/analytics': typeof DashboardAdminAnalyticsRoute
  '/_dashboard/admin/claims': typeof DashboardAdminClaimsRoute
  '/_dashboard/admin/home': typeof DashboardAdminHomeRoute
  '/_dashboard/admin/marketplace': typeof DashboardAdminMarketplaceRoute
  '/_dashboard/admin/purchases': typeof DashboardAdminPurchasesRoute
  '/_dashboard/admin/quests': typeof DashboardAdminQuestsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/account'
    | '/home'
    | '/leaderboard'
    | '/marketplace'
    | '/my-purchases'
    | '/notifications'
    | '/quests'
    | '/schools'
    | '/users'
    | '/auth/login'
    | '/auth/signup'
    | '/admin/analytics'
    | '/admin/claims'
    | '/admin/home'
    | '/admin/marketplace'
    | '/admin/purchases'
    | '/admin/quests'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/account'
    | '/home'
    | '/leaderboard'
    | '/marketplace'
    | '/my-purchases'
    | '/notifications'
    | '/quests'
    | '/schools'
    | '/users'
    | '/auth/login'
    | '/auth/signup'
    | '/admin/analytics'
    | '/admin/claims'
    | '/admin/home'
    | '/admin/marketplace'
    | '/admin/purchases'
    | '/admin/quests'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/_dashboard'
    | '/_dashboard/account'
    | '/_dashboard/home'
    | '/_dashboard/leaderboard'
    | '/_dashboard/marketplace'
    | '/_dashboard/my-purchases'
    | '/_dashboard/notifications'
    | '/_dashboard/quests'
    | '/_dashboard/schools'
    | '/_dashboard/users'
    | '/auth/login'
    | '/auth/signup'
    | '/_dashboard/admin/analytics'
    | '/_dashboard/admin/claims'
    | '/_dashboard/admin/home'
    | '/_dashboard/admin/marketplace'
    | '/_dashboard/admin/purchases'
    | '/_dashboard/admin/quests'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_dashboard/users': {
      id: '/_dashboard/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof DashboardUsersRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/schools': {
      id: '/_dashboard/schools'
      path: '/schools'
      fullPath: '/schools'
      preLoaderRoute: typeof DashboardSchoolsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/quests': {
      id: '/_dashboard/quests'
      path: '/quests'
      fullPath: '/quests'
      preLoaderRoute: typeof DashboardQuestsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/notifications': {
      id: '/_dashboard/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof DashboardNotificationsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/my-purchases': {
      id: '/_dashboard/my-purchases'
      path: '/my-purchases'
      fullPath: '/my-purchases'
      preLoaderRoute: typeof DashboardMyPurchasesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/marketplace': {
      id: '/_dashboard/marketplace'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof DashboardMarketplaceRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/leaderboard': {
      id: '/_dashboard/leaderboard'
      path: '/leaderboard'
      fullPath: '/leaderboard'
      preLoaderRoute: typeof DashboardLeaderboardRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/home': {
      id: '/_dashboard/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof DashboardHomeRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/account': {
      id: '/_dashboard/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof DashboardAccountRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/admin/quests': {
      id: '/_dashboard/admin/quests'
      path: '/admin/quests'
      fullPath: '/admin/quests'
      preLoaderRoute: typeof DashboardAdminQuestsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/admin/purchases': {
      id: '/_dashboard/admin/purchases'
      path: '/admin/purchases'
      fullPath: '/admin/purchases'
      preLoaderRoute: typeof DashboardAdminPurchasesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/admin/marketplace': {
      id: '/_dashboard/admin/marketplace'
      path: '/admin/marketplace'
      fullPath: '/admin/marketplace'
      preLoaderRoute: typeof DashboardAdminMarketplaceRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/admin/home': {
      id: '/_dashboard/admin/home'
      path: '/admin/home'
      fullPath: '/admin/home'
      preLoaderRoute: typeof DashboardAdminHomeRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/admin/claims': {
      id: '/_dashboard/admin/claims'
      path: '/admin/claims'
      fullPath: '/admin/claims'
      preLoaderRoute: typeof DashboardAdminClaimsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/admin/analytics': {
      id: '/_dashboard/admin/analytics'
      path: '/admin/analytics'
      fullPath: '/admin/analytics'
      preLoaderRoute: typeof DashboardAdminAnalyticsRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface DashboardRouteChildren {
  DashboardAccountRoute: typeof DashboardAccountRoute
  DashboardHomeRoute: typeof DashboardHomeRoute
  DashboardLeaderboardRoute: typeof DashboardLeaderboardRoute
  DashboardMarketplaceRoute: typeof DashboardMarketplaceRoute
  DashboardMyPurchasesRoute: typeof DashboardMyPurchasesRoute
  DashboardNotificationsRoute: typeof DashboardNotificationsRoute
  DashboardQuestsRoute: typeof DashboardQuestsRoute
  DashboardSchoolsRoute: typeof DashboardSchoolsRoute
  DashboardUsersRoute: typeof DashboardUsersRoute
  DashboardAdminAnalyticsRoute: typeof DashboardAdminAnalyticsRoute
  DashboardAdminClaimsRoute: typeof DashboardAdminClaimsRoute
  DashboardAdminHomeRoute: typeof DashboardAdminHomeRoute
  DashboardAdminMarketplaceRoute: typeof DashboardAdminMarketplaceRoute
  DashboardAdminPurchasesRoute: typeof DashboardAdminPurchasesRoute
  DashboardAdminQuestsRoute: typeof DashboardAdminQuestsRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAccountRoute: DashboardAccountRoute,
  DashboardHomeRoute: DashboardHomeRoute,
  DashboardLeaderboardRoute: DashboardLeaderboardRoute,
  DashboardMarketplaceRoute: DashboardMarketplaceRoute,
  DashboardMyPurchasesRoute: DashboardMyPurchasesRoute,
  DashboardNotificationsRoute: DashboardNotificationsRoute,
  DashboardQuestsRoute: DashboardQuestsRoute,
  DashboardSchoolsRoute: DashboardSchoolsRoute,
  DashboardUsersRoute: DashboardUsersRoute,
  DashboardAdminAnalyticsRoute: DashboardAdminAnalyticsRoute,
  DashboardAdminClaimsRoute: DashboardAdminClaimsRoute,
  DashboardAdminHomeRoute: DashboardAdminHomeRoute,
  DashboardAdminMarketplaceRoute: DashboardAdminMarketplaceRoute,
  DashboardAdminPurchasesRoute: DashboardAdminPurchasesRoute,
  DashboardAdminQuestsRoute: DashboardAdminQuestsRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
