// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeTuyauResponse } from '@tuyau/utils/types'
import type { InferInput } from '@vinejs/vine/types'

type RegisterPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/auth.ts')['registerValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['register'], true>
}
type SignupPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/auth.ts')['signupValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['signup'], true>
}
type LoginPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/auth.ts')['loginValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['login'], true>
}
type ForgotPasswordPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/auth.ts')['forgotPasswordValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['forgotPassword'], true>
}
type ResetPasswordPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/auth.ts')['resetPasswordValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['resetPassword'], true>
}
type LogoutDelete = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['logout'], false>
}
type LogoutAllDelete = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['logoutAllDevices'], false>
}
type MeGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['me'], false>
}
type StudentsImportPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/students_import.ts')['importStudentsValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/students_imports_controller.ts').default['import'], true>
}
type StudentsInvitationcodesGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/students_imports_controller.ts').default['getInvitationCodes'], false>
}
export interface ApiDefinition {
  'register': {
    '$url': {
    };
    '$post': RegisterPost;
  };
  'signup': {
    '$url': {
    };
    '$post': SignupPost;
  };
  'login': {
    '$url': {
    };
    '$post': LoginPost;
  };
  'forgot-password': {
    '$url': {
    };
    '$post': ForgotPasswordPost;
  };
  'reset-password': {
    '$url': {
    };
    '$post': ResetPasswordPost;
  };
  'logout': {
    '$url': {
    };
    '$delete': LogoutDelete;
  };
  'logout-all': {
    '$url': {
    };
    '$delete': LogoutAllDelete;
  };
  'me': {
    '$url': {
    };
    '$get': MeGetHead;
    '$head': MeGetHead;
  };
  'students': {
    'import': {
      '$url': {
      };
      '$post': StudentsImportPost;
    };
    'invitation-codes': {
      '$url': {
      };
      '$get': StudentsInvitationcodesGetHead;
      '$head': StudentsInvitationcodesGetHead;
    };
  };
}
const routes = [
  {
    params: [],
    name: 'auth.register',
    path: '/register',
    method: ["POST"],
    types: {} as RegisterPost,
  },
  {
    params: [],
    name: 'auth.signup',
    path: '/signup',
    method: ["POST"],
    types: {} as SignupPost,
  },
  {
    params: [],
    name: 'auth.login',
    path: '/login',
    method: ["POST"],
    types: {} as LoginPost,
  },
  {
    params: [],
    name: 'auth.forgotPassword',
    path: '/forgot-password',
    method: ["POST"],
    types: {} as ForgotPasswordPost,
  },
  {
    params: [],
    name: 'auth.resetPassword',
    path: '/reset-password',
    method: ["POST"],
    types: {} as ResetPasswordPost,
  },
  {
    params: [],
    name: 'auth.logout',
    path: '/logout',
    method: ["DELETE"],
    types: {} as LogoutDelete,
  },
  {
    params: [],
    name: 'auth.logoutAll',
    path: '/logout-all',
    method: ["DELETE"],
    types: {} as LogoutAllDelete,
  },
  {
    params: [],
    name: 'auth.me',
    path: '/me',
    method: ["GET","HEAD"],
    types: {} as MeGetHead,
  },
  {
    params: [],
    name: 'students.import',
    path: '/students/import',
    method: ["POST"],
    types: {} as StudentsImportPost,
  },
  {
    params: [],
    name: 'students.invitationCodes',
    path: '/students/invitation-codes',
    method: ["GET","HEAD"],
    types: {} as StudentsInvitationcodesGetHead,
  },
] as const;
export const api = {
  routes,
  definition: {} as ApiDefinition
}
