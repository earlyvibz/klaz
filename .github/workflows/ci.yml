name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

env:
  NODE_VERSION: "20"
  PNPM_VERSION: "latest"

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      NODE_ENV: test
      DOMAIN: localhost
      PORT: 3333
      APP_KEY: test-key-that-is-32-characters-
      HOST: 0.0.0.0
      LOG_LEVEL: info
      SESSION_DRIVER: memory
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: klaz_test
      LIMITER_STORE: memory
      RESEND_API_KEY: test-resend-api-key
      FRONTEND_URL: http://localhost:3000
      SENTRY_DSN: ""
      DRIVE_DISK: local
      R2_KEY: ""
      R2_SECRET: ""
      R2_BUCKET: ""
      R2_ENDPOINT: ""

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: klaz_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint & Format check
        run: pnpm check

      - name: TypeScript check
        run: |
          pnpm --filter @klaz/backend typecheck
          pnpm --filter front typecheck

      - name: Generate APP_KEY
        working-directory: ./apps/backend
        run: node ace generate:key

      - name: Run migrations
        working-directory: ./apps/backend
        run: node ace migration:run

      - name: Run backend tests with coverage
        working-directory: ./apps/backend
        run: node ace test --coverage

      - name: Run frontend tests
        working-directory: ./apps/front
        run: pnpm test:run

      - name: Upload coverage reports
        if: github.event_name == 'push'
        uses: codecov/codecov-action@v4
        with:
          file: ./apps/backend/coverage/lcov.info
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false
